// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using projekat_kaja.Models;

#nullable disable

namespace projekat_kaja.Migrations
{
    [DbContext(typeof(EMSContext))]
    [Migration("20241023122144_V3")]
    partial class V3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("projekat_kaja.Models.Event", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<double>("CenaKarte")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Kapacitet")
                        .HasColumnType("integer");

                    b.Property<int?>("KategorijaEventID")
                        .HasColumnType("integer");

                    b.Property<int?>("LocationEventID")
                        .HasColumnType("integer");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("URLimg")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("Vreme")
                        .HasColumnType("interval");

                    b.HasKey("ID");

                    b.HasIndex("KategorijaEventID");

                    b.HasIndex("LocationEventID");

                    b.ToTable("EVENT");
                });

            modelBuilder.Entity("projekat_kaja.Models.Kategorija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("ID");

                    b.ToTable("KATEGORIJA");
                });

            modelBuilder.Entity("projekat_kaja.Models.Location", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.HasKey("ID");

                    b.ToTable("LOKACIJE");
                });

            modelBuilder.Entity("projekat_kaja.Models.Registration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("EventsUsersID")
                        .HasColumnType("integer");

                    b.Property<int>("UsersEventsID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("EventsUsersID");

                    b.HasIndex("UsersEventsID");

                    b.ToTable("REGISTRACIJA");
                });

            modelBuilder.Entity("projekat_kaja.Models.Review", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int?>("EventReviewID")
                        .HasColumnType("integer");

                    b.Property<string>("Komentar")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<double>("Ocena")
                        .HasColumnType("double precision");

                    b.Property<int?>("UserReviewID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("EventReviewID");

                    b.HasIndex("UserReviewID");

                    b.ToTable("REVIEW");
                });

            modelBuilder.Entity("projekat_kaja.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<int>("Tip")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("USER");
                });

            modelBuilder.Entity("projekat_kaja.Models.Event", b =>
                {
                    b.HasOne("projekat_kaja.Models.Kategorija", "KategorijaEvent")
                        .WithMany("EventspoKateg")
                        .HasForeignKey("KategorijaEventID");

                    b.HasOne("projekat_kaja.Models.Location", "LocationEvent")
                        .WithMany("EventsLocation")
                        .HasForeignKey("LocationEventID");

                    b.Navigation("KategorijaEvent");

                    b.Navigation("LocationEvent");
                });

            modelBuilder.Entity("projekat_kaja.Models.Registration", b =>
                {
                    b.HasOne("projekat_kaja.Models.Event", "EventsUsers")
                        .WithMany("UsersEvent")
                        .HasForeignKey("EventsUsersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projekat_kaja.Models.User", "UsersEvents")
                        .WithMany("EventsUsers")
                        .HasForeignKey("UsersEventsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventsUsers");

                    b.Navigation("UsersEvents");
                });

            modelBuilder.Entity("projekat_kaja.Models.Review", b =>
                {
                    b.HasOne("projekat_kaja.Models.Event", "EventReview")
                        .WithMany("ReviewsEvent")
                        .HasForeignKey("EventReviewID");

                    b.HasOne("projekat_kaja.Models.User", "UserReview")
                        .WithMany("ReviewsUser")
                        .HasForeignKey("UserReviewID");

                    b.Navigation("EventReview");

                    b.Navigation("UserReview");
                });

            modelBuilder.Entity("projekat_kaja.Models.Event", b =>
                {
                    b.Navigation("ReviewsEvent");

                    b.Navigation("UsersEvent");
                });

            modelBuilder.Entity("projekat_kaja.Models.Kategorija", b =>
                {
                    b.Navigation("EventspoKateg");
                });

            modelBuilder.Entity("projekat_kaja.Models.Location", b =>
                {
                    b.Navigation("EventsLocation");
                });

            modelBuilder.Entity("projekat_kaja.Models.User", b =>
                {
                    b.Navigation("EventsUsers");

                    b.Navigation("ReviewsUser");
                });
#pragma warning restore 612, 618
        }
    }
}
